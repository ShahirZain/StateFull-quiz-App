{"ast":null,"code":"import _classCallCheck from \"/media/shahir/f34e27cf-63b3-4498-8918-036905fdce72/projects/finalquizapp/StateFull-quiz-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shahir/f34e27cf-63b3-4498-8918-036905fdce72/projects/finalquizapp/StateFull-quiz-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shahir/f34e27cf-63b3-4498-8918-036905fdce72/projects/finalquizapp/StateFull-quiz-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shahir/f34e27cf-63b3-4498-8918-036905fdce72/projects/finalquizapp/StateFull-quiz-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shahir/f34e27cf-63b3-4498-8918-036905fdce72/projects/finalquizapp/StateFull-quiz-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/media/shahir/f34e27cf-63b3-4498-8918-036905fdce72/projects/finalquizapp/StateFull-quiz-App/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/media/shahir/f34e27cf-63b3-4498-8918-036905fdce72/projects/finalquizapp/StateFull-quiz-App/src/component/testQuesJS1/testQuesJS1.js\";\nimport React, { Component } from \"react\";\nimport MCQs from \"./mcq\";\n/*import coverPic1 from \"../../images/quiz.jpg\";\nimport coverPic2 from \"../../images/test.png\"; */\n\nvar QuizList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizList, _Component);\n\n  function QuizList() {\n    var _this;\n\n    _classCallCheck(this, QuizList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizList).call(this));\n    _this.state = {\n      quiz_list: [{\n        quizName: \"HTML\",\n        tests: 1\n      }],\n      quiz_info: [{\n        quizName: \"HTML\",\n        tests: [{\n          name: \"Test 1\",\n          questions: 5,\n          time: 60,\n          quiz_questions: [{\n            quiz: \"What is abbreviation of HTML?\",\n            option1: \"Hyper Type Multi Language\",\n            option2: \"Higher Text Multiple Language\",\n            option3: \"Hyper Text Markup Language\",\n            option4: \"Hollow Type Markup Language \",\n            answer: \"3\"\n          }, {\n            quiz: \"How many types of markup in HTML?\",\n            option1: \"Both\",\n            option2: \"1 - opening and closing markup only\",\n            option3: \"1 - self closing markups only\",\n            option4: \"None of above\",\n            answer: \"1\"\n          }, {\n            quiz: \"<iframe> is HTML5 markup\",\n            option1: \"False\",\n            option2: \"True\",\n            option3: \"Neither true nor false\",\n            option4: \"Not Sure\",\n            answer: \"2\"\n          }]\n        }]\n      }],\n      saveSelectedQuizObj: null,\n      renderSelectedTestObj: false,\n      renderMCQs: false,\n      currentTestIndex: null\n    };\n    _this.back = _this.back.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.backToDashboard = _this.backToDashboard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // saving selected quiz to state\n\n\n  _createClass(QuizList, [{\n    key: \"updateQuizInfoState\",\n    value: function updateQuizInfoState(index) {\n      var quiz_info = this.state.quiz_info;\n      this.setState({\n        saveSelectedQuizObj: quiz_info[index],\n        renderSelectedTestObj: true\n      });\n    } // back button function\n\n  }, {\n    key: \"back\",\n    value: function back() {\n      this.setState({\n        renderSelectedTestObj: false\n      });\n    }\n  }, {\n    key: \"backToDashboard\",\n    value: function backToDashboard(param) {\n      this.setState({\n        renderMCQs: param\n      });\n    }\n  }, {\n    key: \"renderQuizInfo\",\n    value: function renderQuizInfo() {\n      var _this2 = this;\n\n      var saveSelectedQuizObj = this.state.saveSelectedQuizObj;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, saveSelectedQuizObj.quizName, \" Quiz\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, saveSelectedQuizObj.tests.map(function (test, i) {\n        return React.createElement(\"div\", {\n          className: \"col-md-4\",\n          key: \"\".concat(saveSelectedQuizObj.quizName, \"_\").concat(test.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          style: {\n            width: \"18rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, test.name), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Total Questions: \", test.questions), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Total Time: \", test.time / 60, \" Minutes\"), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          onClick: function onClick() {\n            _this2.setState({\n              renderMCQs: true,\n              currentTestIndex: i,\n              renderSelectedTestObj: false\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Start Quiz \", i + 1, \" \", React.createElement(\"i\", {\n          className: \" fa fa-paper-plane\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        })))));\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: this.back,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Back \", React.createElement(\"i\", {\n        className: \"fa fa-backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"renderQuizList\",\n    value: function renderQuizList() {\n      var _this3 = this;\n\n      var quiz_list = this.state.quiz_list;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Dashboard\"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, quiz_list.map(function (qList, index) {\n        return React.createElement(\"div\", {\n          className: \"col-md-4\",\n          key: \"\".concat(qList, \"_\").concat(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          style: {\n            width: \"18rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, qList.quizName, \" Quiz\"), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, \"Test your skills of \", qList.quizName, \" by taking this small quiz. It has \", qList.tests, \" tests.\"), React.createElement(\"button\", {\n          className: \"btn btn-info\",\n          onClick: _this3.updateQuizInfoState.bind(_this3, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, \"Next \", React.createElement(\"i\", {\n          className: \" fa fa-paper-plane\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        })))));\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          renderSelectedTestObj = _this$state.renderSelectedTestObj,\n          renderMCQs = _this$state.renderMCQs,\n          saveSelectedQuizObj = _this$state.saveSelectedQuizObj,\n          currentTestIndex = _this$state.currentTestIndex;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, renderSelectedTestObj ? this.renderQuizInfo() : renderMCQs ? React.createElement(MCQs, {\n        currentQuesObj: saveSelectedQuizObj,\n        currentTestIndex: currentTestIndex,\n        backToDashboard: this.backToDashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }) : this.renderQuizList(), console.log(currentTestIndex, saveSelectedQuizObj, renderMCQs));\n    }\n  }]);\n\n  return QuizList;\n}(Component);\n\nexport default QuizList;","map":{"version":3,"sources":["/media/shahir/f34e27cf-63b3-4498-8918-036905fdce72/projects/finalquizapp/StateFull-quiz-App/src/component/testQuesJS1/testQuesJS1.js"],"names":["React","Component","MCQs","QuizList","state","quiz_list","quizName","tests","quiz_info","name","questions","time","quiz_questions","quiz","option1","option2","option3","option4","answer","saveSelectedQuizObj","renderSelectedTestObj","renderMCQs","currentTestIndex","back","bind","backToDashboard","index","setState","param","map","test","i","width","qList","updateQuizInfoState","renderQuizInfo","renderQuizList","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n import MCQs from \"./mcq\";\n/*import coverPic1 from \"../../images/quiz.jpg\";\nimport coverPic2 from \"../../images/test.png\"; */\n\nclass QuizList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      quiz_list: [\n        { quizName: \"HTML\",\n         tests: 1 }\n      ],\n      quiz_info: [\n        {\n          quizName: \"HTML\",\n          tests: [\n            {\n              name: \"Test 1\",\n              questions: 5,\n              time: 60,\n              quiz_questions: [\n                {\n                  quiz: \"What is abbreviation of HTML?\",\n                  option1: \"Hyper Type Multi Language\",\n                  option2: \"Higher Text Multiple Language\",\n                  option3: \"Hyper Text Markup Language\",\n                  option4: \"Hollow Type Markup Language \",\n                  answer: \"3\"\n                },\n                {\n                  quiz: \"How many types of markup in HTML?\",\n                  option1: \"Both\",\n                  option2: \"1 - opening and closing markup only\",\n                  option3: \"1 - self closing markups only\",\n                  option4: \"None of above\",\n                  answer: \"1\"\n                },\n                {\n                  quiz: \"<iframe> is HTML5 markup\",\n                  option1: \"False\",\n                  option2: \"True\",\n                  option3: \"Neither true nor false\",\n                  option4: \"Not Sure\",\n                  answer: \"2\"\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      saveSelectedQuizObj: null,\n      renderSelectedTestObj: false,\n      renderMCQs: false,\n      currentTestIndex: null\n    };\n    this.back = this.back.bind(this);\n    this.backToDashboard = this.backToDashboard.bind(this);\n  }\n\n  // saving selected quiz to state\n  updateQuizInfoState(index) {\n    const { quiz_info } = this.state;\n    this.setState({\n      saveSelectedQuizObj: quiz_info[index],\n      renderSelectedTestObj: true\n    });\n  }\n\n  // back button function\n  back() {\n    this.setState({ renderSelectedTestObj: false });\n  }\n\n  backToDashboard(param) {\n    this.setState({ renderMCQs: param });\n  }\n\n  renderQuizInfo() {\n    const { saveSelectedQuizObj } = this.state;\n    return (\n      <div>\n        <h2>{saveSelectedQuizObj.quizName} Quiz</h2>\n\n        <div className=\"row\">\n          {saveSelectedQuizObj.tests.map((test, i) => {\n            return (\n              <div\n                className=\"col-md-4\"\n                key={`${saveSelectedQuizObj.quizName}_${test.name}`}\n              >\n                <div className=\"card\" style={{ width: \"18rem\" }}>\n                  {/* <img\n                    className=\"card-img-top\"\n                    src={coverPic2}\n                    alt=\"Card image cap\"\n                  /> */}\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{test.name}</h5>\n                    <p className=\"card-text\">\n                      Total Questions: {test.questions}\n                    </p>\n                    <p>Total Time: {test.time / 60} Minutes</p>\n                    <button\n                      className=\"btn btn-success\"\n                      onClick={() => {\n                        this.setState({\n                          renderMCQs: true,\n                          currentTestIndex: i,\n                          renderSelectedTestObj: false\n                        });\n                      }}\n                    >\n                      Start Quiz {i + 1} <i className=\" fa fa-paper-plane\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <br />\n        <button className=\"btn btn-secondary\" onClick={this.back}>\n          Back <i className=\"fa fa-backward\" />\n        </button>\n      </div>\n    );\n  }\n\n  renderQuizList() {\n    const { quiz_list } = this.state;\n    return (\n      <div>\n        <h2>Dashboard</h2>\n\n        <div className=\"row\">\n          {quiz_list.map((qList, index) => {\n            return (\n              <div className=\"col-md-4\" key={`${qList}_${index}`}>\n                <div className=\"card\" style={{ width: \"18rem\" }}>\n                 {/*  <img\n                    className=\"card-img-top\"\n                    src={coverPic1}\n                    alt=\"Card image cap\"\n                  /> */}\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{qList.quizName} Quiz</h5>\n                    <p className=\"card-text\">\n                      Test your skills of {qList.quizName} by taking this small quiz.\n                      It has {qList.tests} tests.\n                    </p>\n                    <button\n                      className=\"btn btn-info\"\n                      onClick={this.updateQuizInfoState.bind(this, index)}\n                    >\n                      Next <i className=\" fa fa-paper-plane\" />\n                    </button>\n                    {/* <button className=\"btn btn-primary\" >Next <i class=\" fa fa-paper-plane\"></i></button> */}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      renderSelectedTestObj,\n      renderMCQs,\n      saveSelectedQuizObj,\n      currentTestIndex\n    } = this.state;\n    return (\n      <div>\n        {renderSelectedTestObj ? (\n          this.renderQuizInfo()\n        ) : renderMCQs ? (\n          <MCQs\n            currentQuesObj={saveSelectedQuizObj}\n            currentTestIndex={currentTestIndex}\n            backToDashboard={this.backToDashboard}\n          />\n        ) : (\n          this.renderQuizList()\n        )}\n        {console.log(currentTestIndex, saveSelectedQuizObj, renderMCQs)}\n      </div>\n    );\n  }\n}\n\nexport default QuizList;\n"]},"metadata":{},"sourceType":"module"}